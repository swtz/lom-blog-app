Curso de React JS 19 e Next.js 15 (atualizado para 2025)

Seção 3: Next.js 15, React 19 e Tailwind CSS v4: Introdução ao Desenvolvimento Moderno

Aula: 158. Data cache e fetching com a Fetch API + Tags e revalidateTag

Nesse projeto, não será usada uma API para comunicação com algum 'backend' externo.
Tudo será feito por dentro do Next (com auxílio das 'server-actions').

Assim, o recurso de Data Fetching se aplica apenas ao uso da Fetch API.

Será usada uma API como exemplo que é disponibilizada no site:
https://randomuser.me/documentation

O processo que provoca o Next à revalidar o 'cache' é muitas vezes orientado pela ação de
'invalidar o cache', ou seja, o desenvolvedor informa para o Next que o 'cache' está
"inválido", provocando ele a REVALIDAR esse 'cache'. É exatamente isso que está sendo visto
durante essas aulas.

Com o uso de 'fetch', é possível informar ao método de que não se quer fazer 'cache' das requisições:

const response = await fetch('https://randomuser.me/api/?results=1', {
  cache: 'no-store',
});

Exemplo de uso informando ao método para fazer 'cache':

const response = await fetch('https://randomuser.me/api/?results=1', {
  next: {
    tags: ['randomuser'],
    revalidate: 30,
  },
});

[na 'server-action']:

revalidateTag('randomuser');

Esse recurso pode não continuar com essas instruções, pois a documentação do Next alerta que isso pode
mudar em atualizações futuras.
