Curso de React JS 19 e Next.js 15 (atualizado para 2025)

Seção 3: Next.js 15, React 19 e Tailwind CSS v4: Introdução ao Desenvolvimento Moderno

Aula: 157. Usando revalidatePath para revalidar o cache manualmente

Só lembrando que, no momento, não existe um padrão de nomenclatura para as 'server-actions',
porque o desenvolvimento sempre foi feito usando 'endpoints' de API.

Elas introduzem um novo paradigma na comunicação de 'frontend' com o 'backend'.

Quando uma 'server-action' é usada na 'prop' 'action' do elemento JSX 'form',
é feita uma requisição (por exemplo, por meio de um 'button' do tipo 'submit')
com o método HTTP 'Post' por padrão.

Independentemente da finalidade da 'server-action', ela se comportará como 'Post';

Para revalidar com manualmente com base no caminho da rota ou 'path':

revalidatePath(<path>);

Essa função do Next pode ser colocada em uma 'server-action'. Assim, quando o usuário
dispara essa função, na PRÓXIMA REQUISIÇÃO, n Next atualizará o valor do 'cache'.
Após isso, o valor ficará estático novamente podendo ser atualizado caso o usuário dispare
outra 'server-action', por exemplo via 'form'.

É possível combinar 'revalidate' (definido na rota dinâmica que está sendo forçada a ser estática)
com 'revalidatePath' (que é definido na 'server-action'). Assim o 'cache' da rota é revalidado por
tempo e de modo manual pelo 'path'.
